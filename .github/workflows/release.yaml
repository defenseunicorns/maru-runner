name: Release Maru on Tag

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo and setup the tooling for this job
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup golang
        uses: ./.github/actions/golang

      - name: Build CLI
        run: |
          make build-cli-linux-amd

      # Upload the contents of the build directory for later stages to use
      - name: Upload build artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: build-artifacts
          path: build/
          retention-days: 1

  validate:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs: build
    steps:
      # Checkout the repo and setup the tooling for this job
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: build-artifacts
          path: build/

      - name: Install Zarf
        uses: ./.github/actions/zarf

      - name: Setup golang
        uses: ./.github/actions/golang

      - name: Make maru executable
        run: |
          chmod +x build/maru

      - name: Run unit tests
        run: |
          make test-unit

      - name: Run e2e tests
        run: |
          make test-e2e
        env:
          MARU_AUTH: '{"gitlab.com": "${{ secrets.MARU_GITLAB_TOKEN }}"}'

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs

  push:
    runs-on: ubuntu-latest
    environment: release
    needs: validate
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup golang
        uses: ./.github/actions/golang

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Download build artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: build-artifacts
          path: build/

      - name: Skip brew latest for pre-release tags
        run: |
          if [[ $GITHUB_REF_NAME == *"rc"* ]]; then
            echo "BREW_NAME=maru@latest-rc" >> $GITHUB_ENV
          else
            echo "BREW_NAME=maru" >> $GITHUB_ENV
          fi

      - name: Get Brew tap repo token
        id: brew-tap-token
        uses: actions/create-github-app-token@21cfef2b496dd8ef5b904c159339626a10ad380e # v1.11.6
        with:
          app-id: ${{ secrets.HOMEBREW_TAP_WORKFLOW_GITHUB_APP_ID }}
          private-key: ${{ secrets.HOMEBREW_TAP_WORKFLOW_GITHUB_APP_SECRET }}
          owner: defenseunicorns
          repositories: homebrew-tap

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ steps.brew-tap-token.outputs.token }}
