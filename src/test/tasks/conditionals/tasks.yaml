# yaml-language-server: $schema=tasks.schema.json
variables:
  - name: FOO
    default: default-value
  - name: BAR
    default: default-value
  - name: VAL1
    default: "5"
  - name: VAL2
    default: "10"

tasks:
  - name: conditional-task-str-comp
    actions:

      # # No if, just cmd, should run
      # - cmd: echo "Print .variables.BAR ${{ .variables.BAR }}"
      #   description: "CMD called and inline variable templated, no condition"

      # # TaskReference should not run foo != bar
      # - task: included-task
      #   if: ${{ eq "foo" "bar" }}

      # # cmd reference should not run foo != bar
      # - cmd: echo "This should not run because foo != bar"
      #   if: ${{ eq "foo" "bar" }}

     # cmd reference should run because .variables.BAR == "default-value"
      # - cmd: echo "This should run because .variables.BAR equals ${{ .variables.BAR }} (default-value)"
      #   if: ${{ eq .variables.BAR "default-value" }}

      # task reference should run because .variables.BAR == "default-value"
      - task: included-task
        if: ${{ eq .variables.BAR "default-value1" }}
      - cmd: echo "hello"
        if: ${{ eq .variables.BAR "default-value1" }}
      # - task: included-task
      #   description: "Included task called with true condition (foo != bar)"
      #   if: ${{ eq "default-value123" "default-value" }}


      # - task: included-task-with-conditions
      #   description: "Included task called with false condition (foo != bar)"
      #   if: ${{ ne "default-value123" "default-value" }}

      # # Should run, no if. Inside called task, first should run, second should not, third should
      - task: included-task-with
        with:
          val: "5"





  - name: included-task-with-conditions
    actions:
      - cmd: echo "Task entered as parent condition evaluated successfully"
      - cmd: echo "This shouldnt print because foo != bar"
        if: ${{ eq "foo" "bar" }}


  - name: included-task-with
    inputs:
      val:
        description: has no default
    actions:
      - cmd: echo "val equals ${{ .inputs.val }}"
        if: ${{ eq .inputs.val "5" }}
      - cmd: echo "This shouldnt print because foo != bar but val equals ${{ .inputs.val }}"
        description: "fail-check"
        if: ${{ eq "foo" "bar" }}
      - cmd: echo "This should print because .variables.BAR equals ${{ .variables.BAR }}"
        if: ${{ eq .variables.BAR "default-value" }}
      - task: included-task
        if: ${{ eq .variables.BAR "default-value" }}
      - task: included-task
        if: ${{ eq .variables.BAR "default-value123" }}

  - name: included-task
    actions:
      - cmd: echo "Task called as condition evaluated successfully"