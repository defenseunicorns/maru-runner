variables:
  - name: FOO
    default: include-value
  - name: BAR
    default: default-value

tasks:
  - name: has-default
    inputs:
      has-default:
        default: default
        description: has a default
    actions:
      # ${{ index .inputs "has-default" }} is necessary to use inputs with '-' in the name
      # This is a known issue with go text/templates
      - cmd: |
          echo ${{ index .inputs "has-default" }}

  - name: has-default-and-required
    inputs:
      has-default-and-required:
        default: default
        description: has a default and is required
        required: true
    actions:
      - cmd: |
          echo $INPUT_HAS_DEFAULT_AND_REQUIRED

  - name: no-default
    inputs:
      no-default:
        description: has no default
    actions:
      - cmd: |
          echo success + ${{ index .inputs "no-default" }}

  - name: no-default-and-required
    inputs:
      no-default-and-required:
        description: has no default and is required
        required: true
    actions:
      - cmd: |
          echo ${{ index .inputs "no-default-and-required" }}

  - name: deprecated-message
    inputs:
      deprecated-message:
        description: This task has a deprecated message
        deprecatedMessage: This is a deprecated message
    actions:
      - cmd: |
          echo ${{ index .inputs "deprecated-message" }}

  - name: echo-foo
    actions:
      - cmd: echo $FOO

  - name: echo-bar
    actions:
      - cmd: echo $BAR

  - name: command-line-with
    description: Test task that uses the --with flag on the command line
    inputs:
      input1:
        description: some input
        required: true
      input2:
        description: some input
        required: false
        default: input2
      input3:
        description: some input
        required: false
        default: input3
    actions:
      - cmd: |
          echo "Input1Tmpl: ${{ .inputs.input1 }} Input1Env: $INPUT_INPUT1 Input2Tmpl: ${{ .inputs.input2 }} Input2Env: ${INPUT_INPUT2} Input3Tmpl: ${{ .inputs.input3 }} Input3Env: $INPUT_INPUT3 Var: $FOO"

  - name: input-with-regex
    description: Test task that uses regex to validate inputs
    inputs:
      not-empty:
        description: An input that should not be empty
        required: true
        default: ${SOME_NONEXISTENT_ENV_VAR}
        pattern: ".+"
      not-empty-and-number:
        description: An input that should be a number
        required: true
        pattern: "[0-9]+"
    actions:
      - cmd: |
          echo ${{ index .inputs "not-empty" }} ${{ index .inputs "not-empty-and-number" }}
